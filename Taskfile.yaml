# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task --list-all
    silent: true
  check:
    cmds:
      - go mod tidy
      - go mod verify
      - go fmt ./pkg/... ./integration/... ./cmd/...
      - go vet ./pkg/... ./integration/... ./cmd/...
      - task: "test:unit"

  lint:
    desc: Run linting checks on the codebase (includes pre-commit)
    cmds:
      - go fmt ./pkg/... ./integration/... ./cmd/...
      - go vet ./pkg/... ./integration/... ./cmd/...
      - uvx pre-commit run --all-files
  build:
    cmds:
    - go build -o bin/ryan main.go
  run:
    cmds:
      - task: build
      - ./bin/ryan
  test:
    cmds:
      - mkdir -p coverage
      - go test -coverprofile=coverage/coverage.out ./pkg/... ./integration/... ./cmd/...

  "test:unit":
    desc: Run only unit tests (excludes integration tests)
    cmds:
      - go test ./pkg/... ./cmd/...

  "test:coverage":
    desc: Generate coverage report and HTML visualization
    cmds:
      - mkdir -p coverage
      - go test -coverprofile=coverage/coverage.out ./pkg/... ./integration/... ./cmd/...
      - go tool cover -html=coverage/coverage.out -o coverage/coverage.html
      - echo "Coverage report generated at coverage/coverage.html"

  "test:integration":
    desc: Run integration tests against real Ollama API
    cmds:
      - go test -v ./integration/...
    env:
      OLLAMA_URL: '{{default "https://ollama.kitty-tetra.ts.net" .OLLAMA_URL}}'
      OLLAMA_TEST_MODEL: '{{default "qwen2.5-coder:1.5b-base" .OLLAMA_TEST_MODEL}}'

  "test:all":
    desc: Run all tests (unit and integration)
    cmds:
      - task: test
      - task: "test:integration"

  "build:model-tester":
    desc: Build model compatibility testing tool
    cmds:
      - go build -o bin/model-tester ./cmd/model-tester

  "test:models:primary":
    desc: Test primary models for tool calling compatibility
    deps: ["build:model-tester"]
    cmds:
      - ./bin/model-tester -models primary -url {{default "http://localhost:11434" .OLLAMA_URL}}

  "test:models:secondary":
    desc: Test secondary models for tool calling compatibility
    deps: ["build:model-tester"]
    cmds:
      - ./bin/model-tester -models secondary -url {{default "http://localhost:11434" .OLLAMA_URL}}

  "test:models:all":
    desc: Test all recommended models for tool calling compatibility
    deps: ["build:model-tester"]
    cmds:
      - ./bin/model-tester -models all -url {{default "http://localhost:11434" .OLLAMA_URL}}

  "test:models:custom":
    desc: Test custom list of models (set MODELS="model1,model2,model3")
    deps: ["build:model-tester"]
    cmds:
      - ./bin/model-tester -models "{{.MODELS}}" -url {{default "http://localhost:11434" .OLLAMA_URL}}

  # File Loading and Embedding Testing
  "test:embeddings":
    desc: Test embedding providers and functionality
    cmds:
      - go test -v ./pkg/vectorstore/... -run "TestMockEmbedder|TestEmbedder|TestLangChainEmbedder"
    env:
      INTEGRATION_TEST: "true"

  "test:file-loading":
    desc: Test file indexing and loading pipeline
    cmds:
      - go test -v ./pkg/chat/... -run "TestDocumentIndexer"
      - go test -v ./integration/... -run "TestFileLoadingPipeline"
    env:
      INTEGRATION_TEST: "true"
      OLLAMA_URL: '{{default "https://ollama.kitty-tetra.ts.net" .OLLAMA_URL}}'

  "test:memory-systems":
    desc: Test memory integration and vector context management
    cmds:
      - go test -v ./pkg/chat/... -run "TestVectorContextManager|TestHybridMemory|TestLangChainVectorMemory"
    env:
      INTEGRATION_TEST: "true"

  "test:performance":
    desc: Run performance and load tests
    cmds:
      - go test -v ./integration/... -run "TestFileLoadingPerformance"
    env:
      INTEGRATION_TEST: "true"
      PERFORMANCE_TEST: "true"

  "test:agents":
    desc: Test agent integration with file systems
    cmds:
      - go test -v ./integration/... -run "TestAgentFileIntegration"
    env:
      INTEGRATION_TEST: "true"
      OLLAMA_URL: '{{default "https://ollama.kitty-tetra.ts.net" .OLLAMA_URL}}'

  "test:vectorstore":
    desc: Run comprehensive vector store tests
    cmds:
      - go test -v ./integration/... -run "TestVectorStore"
    env:
      INTEGRATION_TEST: "true"

  "test:real-embeddings":
    desc: Test with real embedding providers (requires API keys/services)
    cmds:
      - go test -v ./integration/... -run "TestRealEmbeddings"
    env:
      INTEGRATION_TEST: "true"
      TEST_REAL_EMBEDDINGS: "true"
      OLLAMA_BASE_URL: '{{default "https://ollama.kitty-tetra.ts.net" .OLLAMA_BASE_URL}}'
      OPENAI_API_KEY: "{{.OPENAI_API_KEY}}"

  "test:comprehensive":
    desc: Run comprehensive test suite for file loading and embeddings
    cmds:
      - task: "test:embeddings"
      - task: "test:file-loading"
      - task: "test:memory-systems"
      - task: "test:vectorstore"
      - task: "test:performance"
